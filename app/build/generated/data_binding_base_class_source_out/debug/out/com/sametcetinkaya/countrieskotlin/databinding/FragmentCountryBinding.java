// Generated by data binding compiler. Do not edit!
package com.sametcetinkaya.countrieskotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.sametcetinkaya.countrieskotlin.R;
import com.sametcetinkaya.countrieskotlin.model.Country;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentCountryBinding extends ViewDataBinding {
  @NonNull
  public final TextView countryCapital;

  @NonNull
  public final TextView countryCurrency;

  @NonNull
  public final ImageView countryImage;

  @NonNull
  public final TextView countryLanguage;

  @NonNull
  public final TextView countryName;

  @NonNull
  public final TextView countryRegion;

  @Bindable
  protected Country mSelectedCountry;

  protected FragmentCountryBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView countryCapital, TextView countryCurrency, ImageView countryImage,
      TextView countryLanguage, TextView countryName, TextView countryRegion) {
    super(_bindingComponent, _root, _localFieldCount);
    this.countryCapital = countryCapital;
    this.countryCurrency = countryCurrency;
    this.countryImage = countryImage;
    this.countryLanguage = countryLanguage;
    this.countryName = countryName;
    this.countryRegion = countryRegion;
  }

  public abstract void setSelectedCountry(@Nullable Country selectedCountry);

  @Nullable
  public Country getSelectedCountry() {
    return mSelectedCountry;
  }

  @NonNull
  public static FragmentCountryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_country, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCountryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentCountryBinding>inflateInternal(inflater, R.layout.fragment_country, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentCountryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_country, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentCountryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentCountryBinding>inflateInternal(inflater, R.layout.fragment_country, null, false, component);
  }

  public static FragmentCountryBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentCountryBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentCountryBinding)bind(component, view, R.layout.fragment_country);
  }
}
